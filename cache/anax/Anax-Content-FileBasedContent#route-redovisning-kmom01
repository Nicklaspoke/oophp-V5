O:8:"stdClass":7:{s:4:"file";s:24:"redovisning/01_kmom01.md";s:7:"section";s:2:"01";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"views";a:6:{s:5:"flash";a:3:{s:6:"region";s:5:"flash";s:8:"template";s:21:"anax/v2/image/default";s:4:"data";a:1:{s:3:"src";s:68:"image/theme/tree.jpg?width=1100&height=150&crop-to-fit&area=0,0,30,0";}}s:10:"breadcrumb";a:3:{s:6:"region";s:10:"breadcrumb";s:8:"template";s:26:"anax/v2/breadcrumb/default";s:4:"data";a:2:{s:4:"meta";a:1:{s:4:"type";s:10:"breadcrumb";}s:10:"breadcrumb";a:2:{i:1;a:2:{s:3:"url";s:12:"redovisning/";s:4:"text";s:18:"Redovisningstexter";}i:0;a:2:{s:3:"url";s:18:"redovisning/kmom01";s:4:"text";s:18:"Redovisning kmom01";}}}}s:19:"next-previous-above";a:4:{s:6:"region";s:4:"main";s:8:"template";s:29:"anax/v2/next-previous/default";s:4:"sort";i:1;s:4:"data";a:4:{s:17:"nextPreviousTitle";b:0;s:4:"meta";a:1:{s:4:"type";s:13:"next-previous";}s:4:"next";a:10:{s:4:"file";s:24:"redovisning/02_kmom02.md";s:7:"section";s:2:"02";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom02";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;s:5:"route";s:18:"redovisning/kmom02";}s:8:"previous";a:10:{s:4:"file";s:23:"redovisning/00_index.md";s:7:"section";s:2:"00";s:5:"level";i:0;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisningstexter";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;s:5:"route";s:17:"redovisning/index";}}}s:4:"main";a:3:{s:4:"sort";i:2;s:4:"data";a:4:{s:4:"meta";a:1:{s:4:"type";s:8:"toc-sort";}i:0;N;s:7:"content";s:1672:"<h1>Redovisning kmom01</h1>

<p>Jag har ingen tidigare kunskap eller erfarenheter med objektorienterad programmering i php. Dock har jag redan kunskaper allmänt om objektorienterad programmering då jag förra
läsperioden gjorde en kurs i objektorienterad python. Samt innan dess så har jag programmerat objektorienterat i c++.</p>

<p>Det gick allmänt bra att att komma igång med objekt och klasser i php. Utöver lite nya syntax, så påminde det en hel del om hur c++ fungerar med klasser. I med att man kan
strikt deklarera privata variabler precis som i c++. Samt att man har en konstruktor och en dekonstruktor.</p>

<p>Att utföra uppgiften Gissa numret gick bra. Efter man friskat upp minnet med lite grundläggande php såsom session och formulär data samt hur man byggde en sida kontroller. Så
flöt arbetet på bra.</p>

<p>Jag valde taktiken att lagra hela objektet i session, då det kändes lite mer kostsamt att först lagra separata variabler i session och sedan skriva dessa till objektet varje
gång. Det kan ju argumenteras att senare när man väl har större objekt som ska tas hand om så kan det vara bättre att lagra de viktiga variablerna. Då det kan vara bättre än
att lagra ett stort objekt som tar upp mer minne än vad som är praktiskt. Men i detta fall så valde jag att spara hela objektet då det inte var särskilt stort.</p>

<p>Allmänt gick det bra att komma igång med git och github. Det enda som behövdes var att friska upp minnet med vissa git kommandon.</p>

<p>Mit TIL för detta kmom är hur man kan använda en autoloader för att automatiskt ladda in klasser utan att behöva importera varenda en i varje fil.</p>
";s:7:"excerpt";s:1672:"<h1>Redovisning kmom01</h1>

<p>Jag har ingen tidigare kunskap eller erfarenheter med objektorienterad programmering i php. Dock har jag redan kunskaper allmänt om objektorienterad programmering då jag förra
läsperioden gjorde en kurs i objektorienterad python. Samt innan dess så har jag programmerat objektorienterat i c++.</p>

<p>Det gick allmänt bra att att komma igång med objekt och klasser i php. Utöver lite nya syntax, så påminde det en hel del om hur c++ fungerar med klasser. I med att man kan
strikt deklarera privata variabler precis som i c++. Samt att man har en konstruktor och en dekonstruktor.</p>

<p>Att utföra uppgiften Gissa numret gick bra. Efter man friskat upp minnet med lite grundläggande php såsom session och formulär data samt hur man byggde en sida kontroller. Så
flöt arbetet på bra.</p>

<p>Jag valde taktiken att lagra hela objektet i session, då det kändes lite mer kostsamt att först lagra separata variabler i session och sedan skriva dessa till objektet varje
gång. Det kan ju argumenteras att senare när man väl har större objekt som ska tas hand om så kan det vara bättre att lagra de viktiga variablerna. Då det kan vara bättre än
att lagra ett stort objekt som tar upp mer minne än vad som är praktiskt. Men i detta fall så valde jag att spara hela objektet då det inte var särskilt stort.</p>

<p>Allmänt gick det bra att komma igång med git och github. Det enda som behövdes var att friska upp minnet med vissa git kommandon.</p>

<p>Mit TIL för detta kmom är hur man kan använda en autoloader för att automatiskt ladda in klasser utan att behöva importera varenda en i varje fil.</p>
";}s:8:"template";s:23:"anax/v2/article/default";}s:19:"next-previous-below";a:4:{s:6:"region";s:4:"main";s:8:"template";s:29:"anax/v2/next-previous/default";s:4:"sort";i:3;s:4:"data";a:4:{s:17:"nextPreviousTitle";b:1;s:4:"meta";a:2:{s:4:"type";s:4:"copy";s:4:"view";s:19:"next-previous-above";}s:4:"next";a:10:{s:4:"file";s:24:"redovisning/02_kmom02.md";s:7:"section";s:2:"02";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom02";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;s:5:"route";s:18:"redovisning/kmom02";}s:8:"previous";a:10:{s:4:"file";s:23:"redovisning/00_index.md";s:7:"section";s:2:"00";s:5:"level";i:0;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisningstexter";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;s:5:"route";s:17:"redovisning/index";}}}s:3:"toc";a:3:{s:6:"region";s:12:"sidebar-left";s:8:"template";s:19:"anax/v2/toc/default";s:4:"data";a:3:{s:5:"title";s:9:"Innehåll";s:4:"meta";a:1:{s:4:"type";s:8:"book-toc";}s:3:"toc";a:8:{s:17:"redovisning/index";a:9:{s:4:"file";s:23:"redovisning/00_index.md";s:7:"section";s:2:"00";s:5:"level";i:0;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisningstexter";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom01";a:9:{s:4:"file";s:24:"redovisning/01_kmom01.md";s:7:"section";s:2:"01";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom01";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom02";a:9:{s:4:"file";s:24:"redovisning/02_kmom02.md";s:7:"section";s:2:"02";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom02";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom03";a:9:{s:4:"file";s:24:"redovisning/03_kmom03.md";s:7:"section";s:2:"03";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom03";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom04";a:9:{s:4:"file";s:24:"redovisning/04_kmom04.md";s:7:"section";s:2:"04";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom04";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom05";a:9:{s:4:"file";s:24:"redovisning/05_kmom05.md";s:7:"section";s:2:"05";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom05";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom06";a:9:{s:4:"file";s:24:"redovisning/06_kmom06.md";s:7:"section";s:2:"06";s:5:"level";i:2;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom06";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}s:18:"redovisning/kmom10";a:9:{s:4:"file";s:24:"redovisning/10_kmom10.md";s:7:"section";s:2:"10";s:5:"level";i:1;s:8:"internal";b:0;s:7:"tocable";b:1;s:5:"title";s:18:"Redovisning kmom10";s:11:"publishTime";b:0;s:13:"sectionHeader";N;s:8:"linkable";N;}}}}}s:11:"frontmatter";a:2:{i:0;N;s:5:"title";s:18:"Redovisning kmom01";}}